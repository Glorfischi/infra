" ----General Settings----

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

set history=1000       " keep 1000 lines of command line history
set number             " line numbers
set ruler              " show the cursor position all the time
set showcmd            " display incomplete commands
set incsearch          " do incremental searching
set hlsearch
set linebreak          " wrap lines on 'word' boundaries
set scrolloff=3        " don't let the cursor touch the edge of the viewport
set splitright         " Vertical splits use right half of screen
set mouse=a
set wildmenu           " Commandline complete
set encoding=utf-8
set colorcolumn=128

"--Tab settings
set expandtab
set tabstop=2
set softtabstop=2
set shiftwidth=2


syntax on
let g:solarized_termcolors=256
colorscheme solarized 
colorscheme peachpuff
set background=dark
set showmatch        " Highlight matchin parenthesis
set laststatus=2     " Allways show status line
set t_Co=256         " color mode 256


let mapleader="\<SPACE>"
nmap <silent> <A-Up> :wincmd k<CR>
nmap <silent> <A-Down> :wincmd j<CR>
nmap <silent> <A-Left> :wincmd h<CR>
nmap <silent> <A-Right> :wincmd l<CR>

map <A-k> <C-W>-
map <A-j> <C-W>+
map <A-h> <C-W>>
map <A-l> <C-W><



" ----Plugins----

call plug#begin('~/.local/share/nvim/plugged')

" For Autocomplete
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }

let g:deoplete#enable_at_startup = 1
if !exists('g:deoplete#omni#input_patterns')
  let g:deoplete#omni#input_patterns = {}
endif
autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif
" deoplete tab-complete
inoremap <expr><tab> pumvisible() ? "\<c-n>" : "\<tab>"

" add python completion
Plug 'zchee/deoplete-jedi'

" Fuzzy searching

Plug 'git@github.com:kien/ctrlp.vim.git'
" Open file menu
nnoremap <Leader>o :CtrlP<CR>
" Open buffer menu
nnoremap <Leader>b :CtrlPBuffer<CR>
" Open most recently used files
nnoremap <Leader>f :CtrlPMRUFiles<CR>

"" airline is a better status line and a tab-bar for nvim.
Plug 'bling/vim-airline'
let g:airline#extensions#tabline#enabled = 2
let g:airline_powerline_fonts = 0
"let g:airline#extensions#tabline#fnamemod = ':t'
"let g:airline#extensions#tabline#left_sep = ' '
"let g:airline#extensions#tabline#left_alt_sep = '|'
"let g:airline#extensions#tabline#right_sep = ' '
"let g:airline#extensions#tabline#right_alt_sep = '|'
"let g:airline_left_sep = ' '
"let g:airline_left_alt_sep = '|'
"let g:airline_right_sep = ' '
"let g:airline_right_alt_sep = '|'
let g:airline_theme= 'powerlineish'

" airline_themes
Plug 'vim-airline/vim-airline-themes'
" neomake is a code linting tool that runs in the background.
Plug 'neomake/neomake'
" golang suport
Plug 'fatih/vim-go'



call plug#end()
